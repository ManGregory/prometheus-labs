global:
  # Global configuration for all notifications
  resolve_timeout: 5m

# Route configuration - how alerts are grouped and routed
route:
  group_by: ['alertname', 'instance']
  group_wait: 30s      # Wait time before sending first notification
  group_interval: 5m   # Wait time before sending notifications about new alerts in group
  repeat_interval: 12h # Wait time before re-sending notifications
  receiver: 'default-receiver'

  # Special routing for critical alerts
  routes:
  - match:
      severity: critical
    receiver: 'critical-alerts'
    group_wait: 10s
    repeat_interval: 5m

# Notification receivers
receivers:
- name: 'default-receiver'
  telegram_configs:
  - bot_token: '${TELEGRAM_BOT_TOKEN}'
    chat_id: ${TELEGRAM_CHAT_ID}
    message: |
      üîî WebLMS Alert: {{ .GroupLabels.alertname }}

      {{ range .Alerts -}}
      ‚Ä¢ Alert: {{ .Annotations.summary }}
      ‚Ä¢ Instance: {{ .Labels.instance }}
      ‚Ä¢ Severity: {{ .Labels.severity }}
      ‚Ä¢ Description: {{ .Annotations.description }}
      ‚Ä¢ Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
      {{ end }}

- name: 'critical-alerts'
  telegram_configs:
  - bot_token: '${TELEGRAM_BOT_TOKEN}'
    chat_id: ${TELEGRAM_CHAT_ID}
    message: |
      üö® CRITICAL WebLMS Alert üö®

      {{ range .Alerts -}}
      üî• {{ .Annotations.summary }}
      üìç Instance: {{ .Labels.instance }}
      ‚ö†Ô∏è Severity: {{ .Labels.severity }}
      üìù Description: {{ .Annotations.description }}
      ‚è∞ Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
      {{ end }}

      ‚ÄºÔ∏è IMMEDIATE ACTION REQUIRED ‚ÄºÔ∏è

# Global inhibition rules - prevent certain alerts when others are firing
inhibit_rules:
- source_matchers:
    - alertname = "WebLMSAPIDown"
  target_matchers:
    - alertname = "HighResponseTime"
  # If API is down, don't alert about response time